import React, { useEffect, useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import { fetchProducts } from "./store/productSlice";
import { Input, Select, Pagination, Card } from "antd";

const { Search } = Input;
const { Option } = Select;

const ProductCatalog = () => {
  const dispatch = useDispatch();
  const { products, loading } = useSelector((state) => state.products);
  
  const [searchTerm, setSearchTerm] = useState("");
  const [category, setCategory] = useState("");
  const [sortBy, setSortBy] = useState("price");
  const [currentPage, setCurrentPage] = useState(1);
  const pageSize = 6;

  useEffect(() => {
    dispatch(fetchProducts());
  }, [dispatch]);

  const filteredProducts = products
    .filter((product) =>
      product.name.toLowerCase().includes(searchTerm.toLowerCase())
    )
    .filter((product) => (category ? product.category === category : true))
    .sort((a, b) => (sortBy === "price" ? a.price - b.price : b.rating - a.rating));

  const paginatedProducts = filteredProducts.slice(
    (currentPage - 1) * pageSize,
    currentPage * pageSize
  );

  return (
    <div className="p-4">
      <h2 className="text-lg font-bold mb-4">Product Catalog</h2>
      <div className="flex mb-4 gap-2">
        <Search
          placeholder="Search products"
          onChange={(e) => setSearchTerm(e.target.value)}
          className="w-1/3"
        />
        <Select
          placeholder="Select Category"
          onChange={(value) => setCategory(value)}
          allowClear
          className="w-1/4"
        >
          <Option value="electronics">Electronics</Option>
          <Option value="clothing">Clothing</Option>
          <Option value="home">Home</Option>
        </Select>
        <Select
          value={sortBy}
          onChange={(value) => setSortBy(value)}
          className="w-1/4"
        >
          <Option value="price">Sort by Price</Option>
          <Option value="rating">Sort by Rating</Option>
        </Select>
      </div>
      {loading ? (
        <p>Loading...</p>
      ) : (
        <div className="grid grid-cols-3 gap-4">
          {paginatedProducts.map((product) => (
            <Card key={product.id} title={product.name} cover={<img alt={product.name} src={product.image} />}>
              <p>Price: ${product.price}</p>
              <p>Rating: {product.rating}</p>
              <p>{product.description}</p>
            </Card>
          ))}
        </div>
      )}
      <Pagination
        current={currentPage}
        total={filteredProducts.length}
        pageSize={pageSize}
        onChange={(page) => setCurrentPage(page)}
        className="mt-4"
      />
    </div>
  );
};

export default ProductCatalog;
